// TIP this have to be on top of the build script
// TIP this Plugin will be applied  for every subject
plugins {
    id 'java'
    id "com.benjaminsproule.swagger" version "1.0.5"
    id 'org.hidetake.swagger.generator' version '2.16.0'
}

group 'arkadi'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

allprojects {
    task micro(type: War) {
        doFirst { task ->
            println "I'm $task.project.name"
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'war'
    apply plugin: 'org.hidetake.swagger.generator'
    apply plugin: "com.benjaminsproule.swagger"

    repositories {
        mavenCentral()
    }

    dependencies {
        providedCompile 'javax:javaee-api:7.0'
        compile 'com.h2database:h2:1.4.197'
        swaggerUI 'org.webjars:swagger-ui:3.10.0'
        compileOnly 'io.swagger:swagger-annotations:1.5.22'
        swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.0'
    }

    group 'arkadi'
    sourceCompatibility = 1.8

    micro {
        doLast {
            println "- depend on micro"
        }
        afterEvaluate { Project project ->
            doLast {
                println "- $project.name finished build"
            }
        }
    }
}


project(':api') {

    dependencies {
        compile project(':lib')
    }

    configurations {
        api
    }
    //TIP modify task created for all projects in the all-projects clauses  
    micro {
        baseName = 'api-micro'

    }

    artifacts {
        api micro
    }

}

project(':lib'){
    micro {
        baseName = 'lib-micro'
        from ("$buildDir/swagger-ui-bookStore"){
            into 'swagger-ui'
        }
    }

    swagger {
        apiSource {
            println("hier kommt der: $rootDir")
            springmvc = false
            locations = ['com.arkadi.books.rest']
            schemes = ['http', 'https']
            host = 'localhost:8080'
            basePath = '/lib'
            outputFormats = ['json', 'yaml']
            info {
                title = "need some swag ?"
                version = "1.0.0"
                license {
                    name = 'Apache 2.0'
                }
            }
            securityDefinition {
                name = 'basicAuth'
                type = 'basic'
            }
            swaggerDirectory = "$projectDir/src/main/webapp/api"
            swaggerFileName= 'booksAPI'
            outputPath = "$projectDir/src/main/webapp/api/document.html"
            jsonExampleValues = true
            attachSwaggerArtifact = true
        }
    }

    swaggerSources {
        bookStore {
            inputFile = file('src/main/webapp/api/booksAPI.yaml')
            code {
                language = 'html2'
                outputDir = file("$buildDir/swagger-html")
            }
        }
    }
    build.dependsOn generateSwaggerUI
}