{
  "openapi" : "3.0.1",
  "paths" : {
    "/apps/status" : {
      "get" : {
        "tags" : [ "App" ],
        "summary" : "gets the state of the apps resource",
        "operationId" : "getStatus",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/apps" : {
      "get" : {
        "tags" : [ "App" ],
        "summary" : "gets all apps by means of their context",
        "operationId" : "getAppFeed",
        "parameters" : [ {
          "name" : "appContext",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSApp"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "App" ],
        "summary" : "creates an app",
        "operationId" : "createApp",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSApp"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/apps/{identifier}" : {
      "delete" : {
        "tags" : [ "App" ],
        "summary" : "deletes an app by it's identifier",
        "operationId" : "deleteApp",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResponseAppDelete"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/assetexportprofiles/status" : {
      "get" : {
        "tags" : [ "AssetExportProfile" ],
        "summary" : "gets the state of the asset export profile resource",
        "operationId" : "getStatus_1",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/assetexportprofiles" : {
      "get" : {
        "tags" : [ "AssetExportProfile" ],
        "summary" : "gets all asset export profiles",
        "operationId" : "getAllAssetExportProfiles",
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSAssetExportProfile"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/assetexport/status" : {
      "get" : {
        "tags" : [ "AssetExport" ],
        "summary" : "gets the state of the asset export resource",
        "operationId" : "getStatus_2",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/assetexport/exportassets" : {
      "post" : {
        "tags" : [ "AssetExport" ],
        "summary" : "export assets for a list of asset titles",
        "operationId" : "exportAssets",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSAssetExport"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/assets/status" : {
      "get" : {
        "tags" : [ "Asset" ],
        "summary" : "gets the state of the assets resource",
        "operationId" : "getStatus_3",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/assets/{identifier}" : {
      "get" : {
        "tags" : [ "Asset" ],
        "summary" : "gets an asset by means of the identifier",
        "operationId" : "getAssetData",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "PICTURES_JPG_SMALL"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSAsset"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/assets/searchStandard" : {
      "post" : {
        "tags" : [ "Asset" ],
        "summary" : "asset standard search",
        "operationId" : "searchStandard",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSAsset"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/assets" : {
      "get" : {
        "tags" : [ "Asset" ],
        "summary" : "gets all assets by means of their creation date",
        "operationId" : "getAssetFeed",
        "parameters" : [ {
          "name" : "from-date",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "-1"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "250"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSAssetFeed"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/assettrees/{identifier}/assets" : {
      "post" : {
        "tags" : [ "AssetTree" ],
        "summary" : "get assets for asset nodes",
        "operationId" : "getAssetsForAssetTree",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "PICTURES_JPG_SMALL"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSAsset"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/assettrees" : {
      "get" : {
        "tags" : [ "AssetTree" ],
        "summary" : "get asset tree structures",
        "operationId" : "getAllAssetTrees",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSAssetTree"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/assettrees/{identifier}" : {
      "get" : {
        "tags" : [ "AssetTree" ],
        "summary" : "get asset tree nodes by asset tree identifier",
        "operationId" : "getAssetTreeNodes",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSAssetNode"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/attributes/{identifier}/values" : {
      "get" : {
        "tags" : [ "Attribute" ],
        "summary" : "load lookup values of a specified attribute",
        "operationId" : "getAttributeValues",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSAttributeValue"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/attributes/{identifier}" : {
      "get" : {
        "tags" : [ "Attribute" ],
        "summary" : "load one specified attribute",
        "operationId" : "getAttribute",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSAttributeData"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/attributes/status" : {
      "get" : {
        "tags" : [ "Attribute" ],
        "summary" : "gets the state of the attribute resource",
        "operationId" : "getStatus_4",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/attributes" : {
      "get" : {
        "tags" : [ "Attribute" ],
        "summary" : "load all defined attributes",
        "operationId" : "getAttributeData",
        "parameters" : [ {
          "name" : "attributeScope",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSAttributeData"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/categories/status" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "gets the state of the category resource",
        "operationId" : "getStatus_5",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/categories/{identifier}/dimensions/move" : {
      "post" : {
        "tags" : [ "Category" ],
        "summary" : "moves all dimensions after the anchor",
        "operationId" : "moveDimensionsAfter",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSCategoryMoveDimension"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/categories/{identifier}/attributes" : {
      "post" : {
        "tags" : [ "Category" ],
        "summary" : "insert or update attributes for a specific category",
        "operationId" : "insertOrUpdateCategoryAttributes",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSCategory"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Category" ],
        "summary" : "delete attributes of a specific category",
        "operationId" : "deleteCategoryAttributes",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResponseNodeAvDelete"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/categories/relations" : {
      "post" : {
        "tags" : [ "Category" ],
        "summary" : "insert or update relations between products or dimensions and nodes",
        "operationId" : "insertOrUpdateCategoryNodeRelations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSCategoryNodeRelation"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Category" ],
        "summary" : "delete relations between products or dimensions and nodes",
        "operationId" : "deleteCategoryNodeRelations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResponseNodeRelationDelete"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/categories/{identifier}" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "gets a category by it's identifier",
        "operationId" : "getCategoryData",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSCategory"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Category" ],
        "summary" : "updates a category by it's identifier",
        "operationId" : "updateCategoryNode",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSCategory"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "Category" ],
        "summary" : "inserts a category by it's identifier",
        "operationId" : "insertCategoryNode",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSCategory"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Category" ],
        "summary" : "deletes a category by it's identifier",
        "operationId" : "deleteCategoryNode",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/clients/status" : {
      "get" : {
        "tags" : [ "Client" ],
        "summary" : "gets the state of the client resource",
        "operationId" : "getStatus_6",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/clients" : {
      "get" : {
        "tags" : [ "Client" ],
        "summary" : "get all clients",
        "operationId" : "getAllClients",
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSClient"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/clients/{identifier}" : {
      "get" : {
        "tags" : [ "Client" ],
        "summary" : "get client by identifier",
        "operationId" : "getClient",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSClient"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/configurations/status" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "gets the state of the configurations resource",
        "operationId" : "getStatus_7",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/configurations/web" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "gets all (by the given paramters) web configurations",
        "operationId" : "getAllWebConfigurations",
        "parameters" : [ {
          "name" : "configType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nickname",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "put" : {
        "tags" : [ "Configuration" ],
        "summary" : "updates a web configuration for a user",
        "operationId" : "updateWebConfiguration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      },
      "post" : {
        "tags" : [ "Configuration" ],
        "summary" : "adds a web configuration for a user",
        "operationId" : "postWebConfiguration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/configurations/web/{identifier}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "gets a web configuration for this user by its identifier",
        "operationId" : "getWebConfigurationByIdentifier",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      },
      "delete" : {
        "tags" : [ "Configuration" ],
        "summary" : "deletes a web configuration",
        "operationId" : "deleteWebConfiguration",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/configurations/{appName}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "gets parameters of specific configuration",
        "operationId" : "getCurrentConfig",
        "parameters" : [ {
          "name" : "appName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "Configuration" ],
        "summary" : "updates parameters of specific configuration",
        "operationId" : "writeConfig",
        "parameters" : [ {
          "name" : "appName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/configurations/serverversion" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "gets the server version",
        "operationId" : "getServerVersion",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/dashboards/status" : {
      "get" : {
        "tags" : [ "Dashboard" ],
        "summary" : "gets the state of the dashboard resource",
        "operationId" : "getStatus_8",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/dashboards/versions" : {
      "get" : {
        "tags" : [ "Dashboard" ],
        "summary" : "gets the supported versions of the rest api",
        "operationId" : "getSupportedVersions",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSVersions"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/dashboards" : {
      "get" : {
        "tags" : [ "Dashboard" ],
        "summary" : "gets all current applications, which are configured in iPIM",
        "operationId" : "getApplications",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSApplication"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/datafeeds/foruser/{username}" : {
      "get" : {
        "tags" : [ "Datafeed" ],
        "summary" : "gets all datafeeds that are related to the user",
        "operationId" : "getDatafeedsForUser",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/datafeeds/{identifier}" : {
      "post" : {
        "tags" : [ "Datafeed" ],
        "summary" : "export datafeed for a list of product numbers",
        "operationId" : "exportDatafeed",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSDatafeed"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/datafeeds" : {
      "get" : {
        "tags" : [ "Datafeed" ],
        "summary" : "gets all enabled datafeeds by type",
        "operationId" : "getDatafeeds",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "IPIM_STANDARD_DATAFEED"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSDatafeed"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/dimensions/status" : {
      "get" : {
        "tags" : [ "Dimension" ],
        "summary" : "gets the state of the dimensions resource",
        "operationId" : "getStatus_9",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/dimensions/{identifier}/attributes" : {
      "post" : {
        "tags" : [ "Dimension" ],
        "summary" : "changes an attribute of a specific dimension",
        "operationId" : "changeDimensionAttributes",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/dimensions/{identifier}/assetrelations" : {
      "post" : {
        "tags" : [ "Dimension" ],
        "summary" : "inserts or updates asset relations of a specific dimension",
        "operationId" : "insertOrUpdateDimensionAssetRelations",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Dimension" ],
        "summary" : "deletes asset relations of a specific item",
        "operationId" : "deleteDimensionAssetRelations",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/dimensions/{identifier}/productrelations" : {
      "get" : {
        "tags" : [ "Dimension" ],
        "summary" : "gets all relations of a dimension by a dimension identifier",
        "operationId" : "getDimensionRelations",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSArticleArticleRelation"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "Dimension" ],
        "summary" : "inserts or updates relations of a specific dimension",
        "operationId" : "insertOrUpdateDimensionRelations",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSArticleArticleRelationList"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Dimension" ],
        "summary" : "deletes relations of a specific dimension",
        "operationId" : "deleteDimensionRelations",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSArticleArticleRelationList"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/dimensions/searchStandard" : {
      "post" : {
        "tags" : [ "Dimension" ],
        "summary" : "dimension standard search",
        "operationId" : "searchStandard_1",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "mainAsset",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSDimension"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/dimensions/{identifier}" : {
      "get" : {
        "tags" : [ "Dimension" ],
        "summary" : "gets a dimension by means of the dimension identifier",
        "operationId" : "getDimensionData",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "mainAsset",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetRelationAttributes",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSDimension"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/dimensions/searchList" : {
      "post" : {
        "tags" : [ "Dimension" ],
        "summary" : "dimension list search",
        "operationId" : "searchList",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "mainAsset",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSSearchListResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/dimensions/searchCategory/{categoryIdentifier}" : {
      "get" : {
        "tags" : [ "Dimension" ],
        "summary" : "gets a list of max 250 dimensions that belongs to a category node",
        "operationId" : "getDimensionsByCategoryNodeIdentifier",
        "parameters" : [ {
          "name" : "categoryIdentifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 250
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mainAsset",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "filterByIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSCategoryDimensionsList"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/dirtywords/status" : {
      "get" : {
        "tags" : [ "DirtyWord" ],
        "summary" : "gets the state of the dirty word resource",
        "operationId" : "getStatus_10",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/dirtywords" : {
      "get" : {
        "tags" : [ "DirtyWord" ],
        "summary" : "gets all dirty words",
        "operationId" : "getAllDirtyWords",
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSDirtyWord"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/events/status" : {
      "get" : {
        "tags" : [ "Event" ],
        "summary" : "gets the state of the events resource",
        "operationId" : "getStatus_11",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/events" : {
      "post" : {
        "tags" : [ "Event" ],
        "summary" : "creates events for a list of products",
        "operationId" : "createEvent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSResponseItem"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/exportqueues/{destination}" : {
      "get" : {
        "tags" : [ "ExportQueue" ],
        "summary" : "Enquire export queue by destination, state and period",
        "operationId" : "enquire",
        "parameters" : [ {
          "name" : "destination",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "validFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSExportArticleQueueResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "put" : {
        "tags" : [ "ExportQueue" ],
        "summary" : "Update entries in the export queue to processed",
        "operationId" : "acknowledge",
        "parameters" : [ {
          "name" : "destination",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "ExportQueue" ],
        "summary" : "Enqueue entry to the export queue",
        "operationId" : "enqueue",
        "parameters" : [ {
          "name" : "destination",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/exportqueues" : {
      "get" : {
        "tags" : [ "ExportQueue" ],
        "summary" : "Gets all export destinations and all related areas. The implemenation of this end point is specific to each customer implementation",
        "operationId" : "getDestinations",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSExportQueueDestination"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/items/status" : {
      "get" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "gets the state of the items resource",
        "operationId" : "getStatus_12",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/items/{itemNo}/assetrelations" : {
      "post" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "inserts or updates asset relations of a specific item",
        "operationId" : "insertOrUpdateItemAssetRelations",
        "parameters" : [ {
          "name" : "itemNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "deletes asset relations of a specific item",
        "operationId" : "deleteItemAssetRelations",
        "parameters" : [ {
          "name" : "itemNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/items/processRelationFeed" : {
      "post" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "process relation feed",
        "operationId" : "processRelationFeed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/items/{itemNo}/productrelations" : {
      "get" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "gets all relations of an item by an item number",
        "operationId" : "getItemRelations",
        "parameters" : [ {
          "name" : "itemNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSArticleArticleRelation"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "inserts or updates relations of a specific item",
        "operationId" : "insertOrUpdateItemRelations",
        "parameters" : [ {
          "name" : "itemNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSArticleArticleRelationList"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "deletes relations of a specific item",
        "operationId" : "deleteItemRelations",
        "parameters" : [ {
          "name" : "itemNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSArticleArticleRelationList"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/items/{itemNo}/attributes" : {
      "post" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "changes an attribute of a specific item",
        "operationId" : "changeItemAttributes",
        "parameters" : [ {
          "name" : "itemNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "delete attributes of a specific item",
        "operationId" : "deleteItemAttributes",
        "parameters" : [ {
          "name" : "itemNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResponseArticleAttributeDelete"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/items/searchListModes" : {
      "get" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "get list search modes",
        "operationId" : "getSearchListModes",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSSearchListModesResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/items" : {
      "post" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "inserts one or more items",
        "operationId" : "insertItemFeedJSON",
        "parameters" : [ {
          "name" : "synchronous",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "iport"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSImportResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "deletes one or more items",
        "operationId" : "deleteItems",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResponseItemDelete"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/items/{itemNo}" : {
      "get" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "gets an item by means of an item number",
        "operationId" : "getItemData",
        "parameters" : [ {
          "name" : "itemNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "mainAsset",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partner",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        }, {
          "name" : "clientInheritance",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "assetRelationAttributes",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSItem"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/items/{itemNo}/textconfiguration" : {
      "post" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "generates a text for the item and a given text type",
        "operationId" : "generateText",
        "parameters" : [ {
          "name" : "itemNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/items/searchList" : {
      "post" : {
        "tags" : [ "ItemQueue" ],
        "summary" : "item list search",
        "operationId" : "searchList_1",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "mainAsset",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSSearchListResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/jobhistory/search" : {
      "get" : {
        "tags" : [ "JobHistory" ],
        "summary" : "job history entry search",
        "operationId" : "search",
        "parameters" : [ {
          "name" : "running",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "withError",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stateless",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSJobHistory"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not Found"
          },
          "501" : {
            "description" : "Not Implemented"
          }
        }
      }
    },
    "/jobhistory/status" : {
      "get" : {
        "tags" : [ "JobHistory" ],
        "summary" : "gets the state of the job resource",
        "operationId" : "getStatus_13",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/jobhistory/{id}/state" : {
      "put" : {
        "tags" : [ "JobHistory" ],
        "summary" : "sets the state of a job history entry",
        "operationId" : "changeState",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/jobhistory/{id}/endtime" : {
      "put" : {
        "tags" : [ "JobHistory" ],
        "summary" : "sets the end time of a jobhistory entry",
        "operationId" : "changeEndTime",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/jobs/{identifier}" : {
      "get" : {
        "tags" : [ "Jobry" ],
        "summary" : "gets the details of the job",
        "operationId" : "getJob",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSJob"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/jobs/{identifier}/starttime" : {
      "put" : {
        "tags" : [ "Jobry" ],
        "summary" : "updates the job start time (trigger parameter)",
        "operationId" : "updateStartTime",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSJob"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/jobs/{identifier}/period" : {
      "put" : {
        "tags" : [ "Jobry" ],
        "summary" : "updates the job period (trigger method)",
        "operationId" : "updatePeriod",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSJob"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/jobs/{identifier}/status" : {
      "put" : {
        "tags" : [ "Jobry" ],
        "summary" : "enables or disables a job",
        "operationId" : "updateStatus",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSJob"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/jobs" : {
      "post" : {
        "tags" : [ "Jobry" ],
        "summary" : "creates a job",
        "operationId" : "createJob",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSJob"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/licenses/{supplierId}" : {
      "get" : {
        "tags" : [ "License" ],
        "summary" : "Gets license informations, plus supplier specific information",
        "operationId" : "getLicense",
        "parameters" : [ {
          "name" : "supplierId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSLicense"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/licenses" : {
      "get" : {
        "tags" : [ "License" ],
        "summary" : "Gets license informations, optionally with all suppliers license informations",
        "operationId" : "getLicense_1",
        "parameters" : [ {
          "name" : "allSupplier",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSLicense"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/lookupvalues/status" : {
      "get" : {
        "tags" : [ "LookupValue" ],
        "summary" : "gets the state of the lookup value resource",
        "operationId" : "getStatus_14",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/lookupvalues/{identifier}" : {
      "get" : {
        "tags" : [ "LookupValue" ],
        "summary" : "gets a lookup value by it's identifier",
        "operationId" : "getLookupValueData",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attributeIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSValue"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/partners/users" : {
      "put" : {
        "tags" : [ "Partner" ],
        "summary" : "update users for partner",
        "operationId" : "updateUsersForPartner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSPartnerUserRelation"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/partners/partners" : {
      "put" : {
        "tags" : [ "Partner" ],
        "summary" : "update partner partner relation",
        "operationId" : "updatePartnersForPartner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSPartnerPartnerRelation"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/partners" : {
      "get" : {
        "tags" : [ "Partner" ],
        "summary" : "get all partners",
        "operationId" : "getAllPartners",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSPartner"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Partner" ],
        "summary" : "update partner",
        "operationId" : "updatePartner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSPartner"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "Partner" ],
        "summary" : "create partner",
        "operationId" : "createPartner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSPartner"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/partners/{name}" : {
      "get" : {
        "tags" : [ "Partner" ],
        "summary" : "get partner by name or external id",
        "operationId" : "getPartner",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "name"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSPartner"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/partners/partnerAvs" : {
      "put" : {
        "tags" : [ "Partner" ],
        "summary" : "update partner attribute for partner",
        "operationId" : "updatePartnerAVs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSPartner"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "Partner" ],
        "summary" : "insert partner attributes for partner",
        "operationId" : "createPartnerAVs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSPartner"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Partner" ],
        "summary" : "delete partner attributes of partner",
        "operationId" : "deletePartnerAVs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSPartner"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/partners/{partnerIdentifier}/{partnerAVIdentifier}" : {
      "delete" : {
        "tags" : [ "Partner" ],
        "summary" : "delete partner attribute of partner",
        "operationId" : "deletePartnerAVs_1",
        "parameters" : [ {
          "name" : "partnerIdentifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partnerAVIdentifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSPartner"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/processlog/job/{jobIdentifier}" : {
      "get" : {
        "tags" : [ "ProcessLog" ],
        "summary" : "gets the process log data by jobIdentifier",
        "operationId" : "getProcessLogData",
        "parameters" : [ {
          "name" : "jobIdentifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/processlog/date/{date}" : {
      "get" : {
        "tags" : [ "ProcessLog" ],
        "summary" : "gets the process log data by date",
        "operationId" : "getProcessLogData_1",
        "parameters" : [ {
          "name" : "date",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/processlog/{jobIdentifier}/{date}" : {
      "get" : {
        "tags" : [ "ProcessLog" ],
        "summary" : "gets the process log data by jobIdentifier and date",
        "operationId" : "getProcessLogData_2",
        "parameters" : [ {
          "name" : "jobIdentifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/processlog/{jobIdentifier}/{date}/{attributeIdentifier}" : {
      "get" : {
        "tags" : [ "ProcessLog" ],
        "summary" : "gets the process log data by jobIdentifier, date and attributeIdentifier",
        "operationId" : "getProcessLogData_3",
        "parameters" : [ {
          "name" : "jobIdentifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeIdentifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/processlog" : {
      "get" : {
        "tags" : [ "ProcessLog" ],
        "summary" : "gets the process log data",
        "operationId" : "getProcessLogData_4",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/processes/status" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "gets the state of the process resource",
        "operationId" : "getStatus_15",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/processes/reference/{referenceId}" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "gets the process by it's reference id",
        "operationId" : "getProcessByReferenceId",
        "parameters" : [ {
          "name" : "referenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSProcess"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/processes" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "gets all processes",
        "operationId" : "getProcesses",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSProcess"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/processes/{id}" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "gets the process by it's id",
        "operationId" : "getProcessById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSProcess"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products/searchCategory/{categoryIdentifier}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "gets a list of max 250 products that belongs to category node",
        "operationId" : "getProductsByCategoryNodeIdentifier",
        "parameters" : [ {
          "$ref" : "parameters.json#/versionIdentifier"
        }, {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/limit"
        }, {
          "$ref" : "parameters.json#/type"
        }, {
          "$ref" : "parameters.json#/mainAsset"
        }, {
          "$ref" : "parameters.json#/assetSize"
        }, {
          "$ref" : "parameters.json#/locale"
        }, {
          "$ref" : "parameters.json#/page"
        }, {
          "$ref" : "parameters.json#/filterByProductNo"
        }, {
          "$ref" : "parameters.json#/include"
        }, {
          "$ref" : "parameters.json#/locale"
        }, {
          "name" : "categoryIdentifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productNo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 250
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mainAsset",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "filterByProductNo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSCategoryProductsList"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products/{productNo}/assetrelations" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "inserts or updates asset relations of a specific product",
        "operationId" : "insertOrUpdateProductAssetRelations",
        "parameters" : [ {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/mode"
        }, {
          "$ref" : "parameters.json#/jsonString"
        }, {
          "name" : "productNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Product" ],
        "summary" : "deletes asset relations of a specific product",
        "operationId" : "deleteProductAssetRelations",
        "parameters" : [ {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/jsonString"
        }, {
          "name" : "productNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products/status" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "gets the state of the products resource",
        "operationId" : "getStatus_16",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products/{productNo}/attributes" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "changes an attribute of a specific product",
        "operationId" : "changeProductAttributes",
        "parameters" : [ {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/jsonString"
        }, {
          "name" : "productNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Product" ],
        "summary" : "delete attributes of a specific product",
        "operationId" : "deleteProductAttributes",
        "parameters" : [ {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/jsonString"
        }, {
          "name" : "productNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResponseArticleAttributeDelete"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products/{productNo}/productrelations" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "gets all relations of a product by a product number",
        "operationId" : "getProductRelations",
        "parameters" : [ {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/type"
        }, {
          "$ref" : "parameters.json#/locale"
        }, {
          "name" : "productNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSArticleArticleRelation"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "inserts or updates relations of a specific product",
        "operationId" : "insertOrUpdateProductRelations",
        "parameters" : [ {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/mode"
        }, {
          "$ref" : "parameters.json#/jsonString"
        }, {
          "name" : "productNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSArticleArticleRelationList"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Product" ],
        "summary" : "deletes relations of a specific product",
        "operationId" : "deleteProductRelations",
        "parameters" : [ {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/jsonString"
        }, {
          "name" : "productNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSArticleArticleRelationList"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products/{productNo}/notifications" : {
      "put" : {
        "tags" : [ "Product" ],
        "summary" : "puts a product notification",
        "operationId" : "createProductNotification",
        "parameters" : [ {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/jsonString"
        }, {
          "name" : "productNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products/{productNo}/dimensions" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "gets all dimensions of a product by means of a product number",
        "operationId" : "getProductDimensions",
        "parameters" : [ {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/limit"
        }, {
          "$ref" : "parameters.json#/type"
        }, {
          "$ref" : "parameters.json#/locale"
        }, {
          "$ref" : "parameters.json#/attributes"
        }, {
          "$ref" : "parameters.json#/mainAsset"
        }, {
          "$ref" : "parameters.json#/assetSize"
        }, {
          "name" : "productNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "mainAsset",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSDimension"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products/searchStandard" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "product standard search",
        "operationId" : "searchStandard_2",
        "parameters" : [ {
          "$ref" : "parameters.json#/type"
        }, {
          "$ref" : "parameters.json#/locale"
        }, {
          "$ref" : "parameters.json#/mainAsset"
        }, {
          "$ref" : "parameters.json#/jsonString"
        }, {
          "$ref" : "parameters.json#/include"
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "mainAsset",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSProduct"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products/{productNo}/textconfiguration" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "generates a text for the product and a given text type",
        "operationId" : "generateText_1",
        "parameters" : [ {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/jsonString"
        }, {
          "name" : "productNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products/{productNo}/ratings" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "gets all ratings of a product by means of a product number",
        "operationId" : "getProductRatings",
        "parameters" : [ {
          "$ref" : "parameters.json#/approval"
        }, {
          "$ref" : "parameters.json#/limit"
        }, {
          "name" : "productNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "approval",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "true"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSRatingOut"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "inserts one or more product ratings",
        "operationId" : "insertRatingFeed",
        "parameters" : [ {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/jsonRepresentation"
        }, {
          "name" : "productNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products/{productNo}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "gets a product by means of a product number",
        "operationId" : "getProductData",
        "parameters" : [ {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/assetSize"
        }, {
          "$ref" : "parameters.json#/attributes"
        }, {
          "$ref" : "parameters.json#/locale"
        }, {
          "$ref" : "parameters.json#/mainAsset"
        }, {
          "$ref" : "parameters.json#/partner"
        }, {
          "$ref" : "parameters.json#/clientInheritance"
        }, {
          "$ref" : "parameters.json#/assetRelationAttributes"
        }, {
          "name" : "productNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "mainAsset",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partner",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        }, {
          "name" : "clientInheritance",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "assetRelationAttributes",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSProduct"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products/{productNo}/ratings/{ratingid}" : {
      "put" : {
        "tags" : [ "Product" ],
        "summary" : "changes a specific rating of a specific product",
        "operationId" : "changeRating",
        "parameters" : [ {
          "$ref" : "parameters.json#/productNo"
        }, {
          "$ref" : "parameters.json#/jsonString"
        }, {
          "name" : "ratingid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products/searchList" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "product list search",
        "operationId" : "searchList_2",
        "parameters" : [ {
          "$ref" : "parameters.json#/type"
        }, {
          "$ref" : "parameters.json#/locale"
        }, {
          "$ref" : "parameters.json#/mainAsset"
        }, {
          "$ref" : "parameters.json#/jsonString"
        }, {
          "$ref" : "parameters.json#/include"
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "mainAsset",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSSearchListResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/queues/status" : {
      "get" : {
        "tags" : [ "Queue" ],
        "summary" : "gets the state of the queues resource",
        "operationId" : "getStatus_17",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/queues/{queueNo}" : {
      "get" : {
        "tags" : [ "Queue" ],
        "summary" : "gets the state of a specific queue resource",
        "operationId" : "getQueueObjectStatus",
        "parameters" : [ {
          "name" : "queueNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSImportResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/reports/{reportIdentifier}" : {
      "post" : {
        "tags" : [ "Report" ],
        "summary" : "execute report and get the data by it's identifier",
        "operationId" : "executeAndGetReportDataByIdentifier",
        "parameters" : [ {
          "name" : "reportIdentifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSReport"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/reports/status" : {
      "get" : {
        "tags" : [ "Report" ],
        "summary" : "gets the state of the reports resource",
        "operationId" : "getStatus_18",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/textconfigurations/status" : {
      "get" : {
        "tags" : [ "TextConfiguration" ],
        "summary" : "gets the state of the resource",
        "operationId" : "getStatus_19",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/textconfigurations" : {
      "get" : {
        "tags" : [ "TextConfiguration" ],
        "summary" : "gets all text setups",
        "operationId" : "getAllTextSetups",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSRatingOut"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/users/status" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "gets the state of the users resource",
        "operationId" : "getStatus_20",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/users/{nickname}" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "get an user by it's nickname",
        "operationId" : "getUser",
        "parameters" : [ {
          "name" : "nickname",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partners",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSUser"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "User" ],
        "summary" : "update user's title, firstname, lastname and department, and allows to re-assign the user's worklists and list folders to a different user",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "nickname",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSUser"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/users/login" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "standard iPIM login",
        "operationId" : "login",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSUser"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "gets all active or inactive users",
        "operationId" : "getUsers",
        "parameters" : [ {
          "name" : "active",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "partners",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSUser"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/users/checkToken" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "check token",
        "operationId" : "checkToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSUser"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/userroles/status" : {
      "get" : {
        "tags" : [ "UserRole" ],
        "summary" : "gets the state of the user roles resource",
        "operationId" : "getStatus_21",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/userroles" : {
      "get" : {
        "tags" : [ "UserRole" ],
        "summary" : "gets user roles by isWorkbox",
        "operationId" : "getUserRolesByIsWorkbox",
        "parameters" : [ {
          "name" : "isWorkbox",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSUserRole"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/userroles/{id}/userrights" : {
      "post" : {
        "tags" : [ "UserRole" ],
        "summary" : "Adds user rights to user role",
        "operationId" : "addUserRightsToUserRole",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSUserRole"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/userroles/{id}" : {
      "get" : {
        "tags" : [ "UserRole" ],
        "summary" : "gets the user role by it's id",
        "operationId" : "getUserRole",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSUserRole"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/validate/{process}/{objectIdentifier}" : {
      "post" : {
        "tags" : [ "Validation" ],
        "summary" : "validate a process specific item",
        "operationId" : "validate",
        "parameters" : [ {
          "name" : "process",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objectIdentifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSValidationResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/validate/status" : {
      "get" : {
        "tags" : [ "Validation" ],
        "summary" : "gets the state of the validation resource",
        "operationId" : "getStatus_22",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/workflows/processes" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "summary" : "gets all workflow process definitions",
        "operationId" : "getWorkflowProcessDefinitions",
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/workflows/{identifier}" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "summary" : "gets the reprensentation of a workflow process",
        "operationId" : "getWorkflowDefinition",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/worklists/status" : {
      "get" : {
        "tags" : [ "Worklist" ],
        "summary" : "gets the state of the worklist resource",
        "operationId" : "getStatus_23",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/worklists" : {
      "get" : {
        "tags" : [ "Worklist" ],
        "summary" : "gets either all worklists or worklists in the specified folder",
        "operationId" : "getWorklists",
        "parameters" : [ {
          "name" : "folder",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSWorklist"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "post" : {
        "tags" : [ "Worklist" ],
        "summary" : "creates a worklist and it's entries",
        "operationId" : "createWorklistWithEntries",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/worklists/{name}" : {
      "get" : {
        "tags" : [ "Worklist" ],
        "summary" : "gets the entries of a worklist by it's name",
        "operationId" : "getWorklistEntries",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "technical"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "deDE"
          }
        }, {
          "name" : "mainAsset",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "assetSize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RSProduct"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Worklist" ],
        "summary" : "adds entries to an existing worklist",
        "operationId" : "addWorklistEntries",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Worklist" ],
        "summary" : "deletes a worklist",
        "operationId" : "deleteWorklist",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "RSApp" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "context" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "pluginIdentifier" : {
            "type" : "string"
          },
          "userRight" : {
            "$ref" : "#/components/schemas/RSUserRight"
          }
        }
      },
      "RSText" : {
        "type" : "object",
        "properties" : {
          "text" : {
            "type" : "string",
            "example" : "Gruen"
          },
          "lang" : {
            "type" : "string",
            "example" : "de_DE"
          }
        }
      },
      "RSUserRight" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "parentId" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "RSResponseAppDelete" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "deletedAppIdentifier" : {
            "type" : "string"
          }
        }
      },
      "RSAssetExportProfile" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "description" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "name" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "zipFileName" : {
            "type" : "string"
          },
          "zipDatePattern" : {
            "type" : "string"
          },
          "fileType" : {
            "$ref" : "#/components/schemas/RSType"
          },
          "sizeType" : {
            "$ref" : "#/components/schemas/RSType"
          }
        }
      },
      "RSType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "identifier" : {
            "type" : "string"
          },
          "description" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          }
        }
      },
      "RSAssetExport" : {
        "type" : "object",
        "properties" : {
          "targetAssetExportPaths" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "asynchronousMode" : {
            "type" : "boolean"
          },
          "serviceCaller" : {
            "type" : "string"
          },
          "assetExportProfileIdentifier" : {
            "type" : "string"
          },
          "assetTitles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fileTransferProfileIdentifier" : {
            "type" : "string"
          },
          "datafeedIdentifier" : {
            "type" : "string"
          },
          "datafeedAssetTransferredFiles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RSAsset" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "identifier" : {
            "type" : "string",
            "example" : "76469_Weisstanne.jpg"
          },
          "description" : {
            "type" : "string"
          },
          "fileType" : {
            "type" : "string"
          },
          "fileSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "creationDate" : {
            "type" : "string"
          },
          "lastUpdate" : {
            "type" : "string"
          },
          "uri" : {
            "type" : "string",
            "format" : "uri",
            "example" : "/iPIM/rest/api/assets/76469_Weisstanne.jpg"
          },
          "sizes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAssetSize"
            }
          }
        }
      },
      "RSAssetSize" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "string",
            "example" : "icon"
          },
          "uri" : {
            "type" : "string",
            "example" : "http://hl04.ishop.nmop.de/smallpim/76469_Weisstanne.jpg"
          }
        }
      },
      "RSAttribute" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "example" : "material"
          },
          "type" : {
            "type" : "string",
            "example" : "attribute",
            "enum" : [ "attribute", "supplierAttribute", "fake", "price", "xsell", "asset", "text", "nodeArticleRelation" ]
          },
          "attributeDataType" : {
            "type" : "string"
          },
          "supplier" : {
            "type" : "string"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSValue"
            }
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "forceUpdate" : {
            "type" : "boolean"
          }
        }
      },
      "RSSupplier" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "catalog" : {
            "type" : "string"
          }
        }
      },
      "RSValue" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "example" : "cotton"
          },
          "uom" : {
            "$ref" : "#/components/schemas/RSValue"
          },
          "amount" : {
            "type" : "string",
            "example" : "12"
          },
          "lang" : {
            "type" : "string"
          },
          "level" : {
            "type" : "string",
            "enum" : [ "product", "dimension", "item" ]
          },
          "refType" : {
            "type" : "string"
          },
          "sortIdx" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "valueFrom" : {
            "type" : "string"
          },
          "valueTo" : {
            "type" : "string"
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "asset" : {
            "$ref" : "#/components/schemas/RSAsset"
          },
          "supplier" : {
            "$ref" : "#/components/schemas/RSSupplier"
          }
        }
      },
      "RSAssetFeed" : {
        "type" : "object",
        "properties" : {
          "next-page" : {
            "type" : "string",
            "format" : "uri"
          },
          "assets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAsset"
            }
          }
        }
      },
      "RSAssetNode" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "identifier" : {
            "type" : "string"
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "sequenceNo" : {
            "type" : "integer",
            "format" : "int64"
          },
          "assetCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "rootNode" : {
            "$ref" : "#/components/schemas/RSAssetNode"
          },
          "parentNode" : {
            "$ref" : "#/components/schemas/RSAssetNode"
          },
          "validFrom" : {
            "type" : "string"
          },
          "validUntil" : {
            "type" : "string"
          },
          "userRight" : {
            "$ref" : "#/components/schemas/RSUserRight"
          },
          "hierarchyPath" : {
            "type" : "string"
          }
        }
      },
      "RSAssetTree" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "client" : {
            "$ref" : "#/components/schemas/RSClient"
          },
          "rootNode" : {
            "$ref" : "#/components/schemas/RSAssetNode"
          },
          "userRight" : {
            "$ref" : "#/components/schemas/RSUserRight"
          }
        }
      },
      "RSClient" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "exportIdentifier" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "description" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "type" : {
            "$ref" : "#/components/schemas/RSType"
          },
          "rightEdit" : {
            "$ref" : "#/components/schemas/RSUserRight"
          },
          "rightView" : {
            "$ref" : "#/components/schemas/RSUserRight"
          },
          "version" : {
            "$ref" : "#/components/schemas/RSVersion"
          },
          "archiveVersion" : {
            "$ref" : "#/components/schemas/RSVersion"
          },
          "parentUri" : {
            "type" : "string",
            "format" : "uri"
          },
          "rootUri" : {
            "type" : "string",
            "format" : "uri"
          },
          "clientLocales" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSLocale"
            }
          }
        }
      },
      "RSLocale" : {
        "type" : "object",
        "properties" : {
          "isoCode" : {
            "type" : "string"
          },
          "booleanYes" : {
            "type" : "string"
          },
          "booleanNo" : {
            "type" : "string"
          }
        }
      },
      "RSVersion" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "RSAttributeValue" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "sequence" : {
            "type" : "integer",
            "format" : "int64"
          },
          "asset" : {
            "$ref" : "#/components/schemas/RSAsset"
          },
          "client" : {
            "$ref" : "#/components/schemas/RSClient"
          },
          "dependentValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttribute"
            }
          },
          "determinedValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttribute"
            }
          }
        }
      },
      "RSAttributeData" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "scope" : {
            "type" : "string"
          },
          "description" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "type" : {
            "$ref" : "#/components/schemas/RSType"
          },
          "minLength" : {
            "type" : "number"
          },
          "maxLength" : {
            "type" : "number"
          },
          "uomSystem" : {
            "$ref" : "#/components/schemas/RSType"
          },
          "sequence" : {
            "type" : "integer",
            "format" : "int64"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "defaultUom" : {
            "$ref" : "#/components/schemas/RSType"
          },
          "group" : {
            "$ref" : "#/components/schemas/RSType"
          },
          "mandatory" : {
            "$ref" : "#/components/schemas/RSType"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int64"
          },
          "inheritable" : {
            "type" : "boolean"
          },
          "onlyItemLevel" : {
            "type" : "boolean"
          },
          "dimensionLevel" : {
            "type" : "boolean"
          },
          "dimension" : {
            "type" : "boolean"
          },
          "viewRight" : {
            "$ref" : "#/components/schemas/RSUserRight"
          },
          "editRight" : {
            "$ref" : "#/components/schemas/RSUserRight"
          },
          "metaAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttributeData"
            }
          },
          "attributeValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttributeValue"
            }
          },
          "attributeProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttribute"
            }
          }
        }
      },
      "RSCategory" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "example" : "backpacks"
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "sequenceNo" : {
            "type" : "integer",
            "format" : "int64"
          },
          "categoryURI" : {
            "type" : "string",
            "format" : "uri",
            "example" : "/iPIM/rest/api/categories/backpacks"
          },
          "parentURI" : {
            "type" : "string",
            "format" : "uri"
          },
          "childURIs" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uri"
            }
          },
          "versionIdentifier" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttribute"
            }
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSNodeAttributeRelation"
            }
          },
          "forceUpdate" : {
            "type" : "boolean"
          },
          "validFrom" : {
            "type" : "string"
          },
          "validUntil" : {
            "type" : "string"
          },
          "channelDescriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          }
        }
      },
      "RSNodeAttributeRelation" : {
        "type" : "object",
        "properties" : {
          "category" : {
            "$ref" : "#/components/schemas/RSCategory"
          },
          "attribute" : {
            "$ref" : "#/components/schemas/RSAttributeData"
          },
          "attributeURI" : {
            "type" : "string",
            "format" : "uri"
          },
          "defaultValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSValue"
            }
          },
          "mandatory" : {
            "$ref" : "#/components/schemas/RSType"
          },
          "sequence" : {
            "type" : "integer",
            "format" : "int64"
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttribute"
            }
          }
        }
      },
      "RSCategoryMoveDimension" : {
        "type" : "object",
        "properties" : {
          "anchor" : {
            "type" : "string"
          },
          "dimensions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RSResponseNodeAvDelete" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "deletedNodeAvs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RSResponseNodeRelationDelete" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "deletedNodeRelations" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RSResult" : {
        "type" : "object",
        "properties" : {
          "invalidInputData" : {
            "type" : "string",
            "writeOnly" : true
          },
          "wrongData" : {
            "type" : "string",
            "writeOnly" : true
          },
          "success" : {
            "type" : "object",
            "writeOnly" : true
          },
          "noResult" : {
            "type" : "string",
            "writeOnly" : true
          }
        }
      },
      "RSCategoryNodeRelation" : {
        "type" : "object",
        "properties" : {
          "versionIdentifier" : {
            "type" : "string"
          },
          "nodeIdentifiers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "entryNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "isProduct" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ranking" : {
            "type" : "integer",
            "format" : "int32"
          },
          "subRanking" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "RSVersions" : {
        "type" : "object",
        "properties" : {
          "versions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RSApplication" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "resource" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "RSDatafeed" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "locale" : {
            "type" : "string"
          },
          "fallbackLocale" : {
            "type" : "string"
          },
          "products" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "productsWhitelist" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "productsBlacklist" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "categoryNodesWhitelist" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSCategory"
            }
          },
          "categoryNodesBlacklist" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSCategory"
            }
          },
          "attributesWhitelist" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSDatafeedAttribute"
            }
          },
          "itemWhitelist" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RSDatafeedAttribute" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "example" : "material"
          },
          "type" : {
            "type" : "string",
            "example" : "attribute",
            "enum" : [ "attribute", "supplierAttribute", "fake", "price", "xsell", "asset", "text", "nodeArticleRelation" ]
          },
          "attributeDataType" : {
            "type" : "string"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSValue"
            }
          },
          "sequence" : {
            "type" : "integer",
            "format" : "int64"
          },
          "modifier" : {
            "type" : "string"
          },
          "supplier" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttribute"
            }
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "forceUpdate" : {
            "type" : "boolean"
          }
        }
      },
      "RSArticleArticleRelation" : {
        "type" : "object",
        "properties" : {
          "relation" : {
            "$ref" : "#/components/schemas/RSRelation"
          },
          "relationType" : {
            "$ref" : "#/components/schemas/RSType"
          },
          "sequenceNo" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "RSRelation" : {
        "type" : "object",
        "properties" : {
          "identifierType" : {
            "type" : "string",
            "enum" : [ "product", "dimension", "item" ]
          },
          "identifier" : {
            "type" : "string"
          },
          "uri" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "RSArticleArticleRelationList" : {
        "type" : "object",
        "properties" : {
          "articleArticleRelations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSArticleArticleRelation"
            }
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSMessage"
            }
          }
        }
      },
      "RSMessage" : {
        "type" : "object",
        "properties" : {
          "level" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string",
            "enum" : [ "ERROR_INVALID_RELATION", "ERROR_RELATION_TYPE_NOT_FOUND", "ERROR_RELATION_TYPE_MISSING_USER_RIGHT", "ERROR_RELATION_TYPE_NOT_FOUND_FOR_DELETE", "ERROR_RELATION_TYPE_MISSING_USER_RIGHT_FOR_DELETE", "ERROR_TARGET_NOT_FOUND_OR_NOT_VISIBLE_TO_CURRENT_USER", "ERROR_DIMENSION_LEVEL_DISABLED" ]
          },
          "params" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RSDimension" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "productNo" : {
            "type" : "string"
          },
          "productURI" : {
            "type" : "string",
            "format" : "uri"
          },
          "dimension" : {
            "$ref" : "#/components/schemas/RSValue"
          },
          "mainAsset" : {
            "$ref" : "#/components/schemas/RSAsset"
          },
          "category" : {
            "$ref" : "#/components/schemas/RSCategory"
          },
          "salesCategories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSCategory"
            }
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttribute"
            }
          },
          "itemURIs" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uri"
            }
          }
        }
      },
      "RSSearchListResult" : {
        "type" : "object",
        "properties" : {
          "productNo" : {
            "type" : "string",
            "example" : "36285"
          },
          "articleNo" : {
            "type" : "string"
          },
          "itemNo" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string",
            "example" : "Trooper"
          },
          "match" : {
            "type" : "string"
          },
          "state1" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "state2" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "state3" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "state4" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "objectType" : {
            "type" : "string"
          },
          "productURI" : {
            "type" : "string",
            "format" : "uri"
          },
          "itemURIs" : {
            "type" : "array",
            "example" : "['/iPIM/rest/api/items/7000029577', '/iPIM/rest/api/items/7000027775']",
            "items" : {
              "type" : "string",
              "format" : "uri",
              "example" : "['/iPIM/rest/api/items/7000029577', '/iPIM/rest/api/items/7000027775']"
            }
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttribute"
            }
          },
          "dimensionNo" : {
            "type" : "string"
          },
          "mainAsset" : {
            "$ref" : "#/components/schemas/RSAsset"
          },
          "salesCategories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSCategory"
            }
          },
          "itemURI" : {
            "type" : "string",
            "format" : "uri",
            "writeOnly" : true
          }
        }
      },
      "RSState" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "state" : {
            "type" : "string",
            "example" : "2"
          }
        }
      },
      "RSCategoryDimensionsList" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "dimensionCategoryRelations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSDimensionCategoryRelation"
            }
          }
        }
      },
      "RSDimensionCategoryRelation" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "productOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "categoryOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dimension" : {
            "$ref" : "#/components/schemas/RSDimension"
          }
        }
      },
      "RSDirtyWord" : {
        "type" : "object",
        "properties" : {
          "languages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSLocalizedDirtyWord"
            }
          }
        }
      },
      "RSLocalizedDirtyWord" : {
        "type" : "object",
        "properties" : {
          "lang" : {
            "type" : "string"
          },
          "words" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RSLogEntry" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "errorLevel" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RSResponseItem" : {
        "type" : "object",
        "properties" : {
          "communicationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "uniqueRefId" : {
            "type" : "string"
          },
          "itemNo" : {
            "type" : "string"
          },
          "dimensionNo" : {
            "type" : "string"
          },
          "productNo" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSLogEntry"
            }
          }
        }
      },
      "RSExportArticleQueueResult" : {
        "type" : "object",
        "properties" : {
          "areaChanged" : {
            "type" : "string"
          },
          "entry" : {
            "$ref" : "#/components/schemas/RSExportQueueEntry"
          },
          "destination" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string"
          },
          "lastModifiedDate" : {
            "type" : "string"
          }
        }
      },
      "RSExportQueueEntry" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "versionIdentifier" : {
            "type" : "string"
          },
          "productNo" : {
            "type" : "string"
          },
          "uri" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "RSExportQueueArea" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          }
        }
      },
      "RSExportQueueDestination" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "areas" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSExportQueueArea"
            }
          }
        }
      },
      "RSResponseArticleAttributeDelete" : {
        "type" : "object",
        "properties" : {
          "deletedAttributes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RSSearchListModesResult" : {
        "type" : "object",
        "properties" : {
          "searchListModes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RSResponseItemDelete" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "deletedItemNos" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RSItem" : {
        "type" : "object",
        "properties" : {
          "communicationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "uniqueRefId" : {
            "type" : "string"
          },
          "itemNo" : {
            "type" : "string"
          },
          "productNo" : {
            "type" : "string",
            "example" : "36285"
          },
          "itemGroup" : {
            "type" : "string"
          },
          "dimensionNo" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string",
            "example" : "Trooper"
          },
          "category" : {
            "$ref" : "#/components/schemas/RSCategory"
          },
          "salesCategories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSCategory"
            }
          },
          "state1" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "state2" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "state3" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "state4" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "objectType" : {
            "type" : "string"
          },
          "productURI" : {
            "type" : "string",
            "format" : "uri"
          },
          "dimensionURI" : {
            "type" : "string",
            "format" : "uri"
          },
          "itemURIs" : {
            "type" : "array",
            "example" : "['/iPIM/rest/api/items/7000029577', '/iPIM/rest/api/items/7000027775']",
            "items" : {
              "type" : "string",
              "format" : "uri",
              "example" : "['/iPIM/rest/api/items/7000029577', '/iPIM/rest/api/items/7000027775']"
            }
          },
          "mainAsset" : {
            "$ref" : "#/components/schemas/RSAsset"
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttribute"
            }
          },
          "itemURI" : {
            "type" : "string",
            "format" : "uri",
            "writeOnly" : true
          }
        }
      },
      "RSImportResponse" : {
        "type" : "object",
        "properties" : {
          "processId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string"
          },
          "step" : {
            "type" : "string"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSResponseItem"
            }
          }
        }
      },
      "RSJobHistory" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "job" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "string"
          },
          "endTime" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        }
      },
      "RSJob" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "period" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "string"
          },
          "interval" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "ip" : {
            "type" : "string"
          },
          "expectedRuntime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "quartzJob" : {
            "type" : "string"
          }
        }
      },
      "RSIpimSupplier" : {
        "type" : "object",
        "properties" : {
          "supplierName" : {
            "type" : "string"
          },
          "supplierId" : {
            "type" : "string"
          },
          "items" : {
            "type" : "integer",
            "format" : "int64"
          },
          "products" : {
            "type" : "integer",
            "format" : "int64"
          },
          "itemsValid" : {
            "type" : "integer",
            "format" : "int64"
          },
          "productsValid" : {
            "type" : "integer",
            "format" : "int64"
          },
          "customParameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "RSLicense" : {
        "type" : "object",
        "properties" : {
          "application" : {
            "type" : "string"
          },
          "products" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "integer",
            "format" : "int64"
          },
          "clients" : {
            "type" : "integer",
            "format" : "int64"
          },
          "users" : {
            "type" : "integer",
            "format" : "int64"
          },
          "apiusers" : {
            "type" : "integer",
            "format" : "int64"
          },
          "merchants" : {
            "type" : "integer",
            "format" : "int64"
          },
          "suppliers" : {
            "type" : "integer",
            "format" : "int64"
          },
          "suppliersList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSIpimSupplier"
            }
          },
          "customParameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "RSPartnerUser" : {
        "type" : "object",
        "properties" : {
          "partnerId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "uri" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "RSPartnerUserRelation" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSUser"
            }
          }
        }
      },
      "RSUser" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "department" : {
            "type" : "string"
          },
          "apiUser" : {
            "type" : "boolean"
          },
          "userRoles" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uri"
            }
          },
          "userAvs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttribute"
            }
          },
          "partners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSPartnerUser"
            }
          },
          "assignToUser" : {
            "type" : "string"
          }
        }
      },
      "RSPartner" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/RSType"
          },
          "partnerAvs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttribute"
            }
          }
        }
      },
      "RSPartnerPartnerRelation" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "partners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSPartner"
            }
          }
        }
      },
      "RSProcess" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "progress" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string"
          },
          "step" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string"
          },
          "lastUpdate" : {
            "type" : "string"
          },
          "referenceId" : {
            "type" : "string"
          },
          "progressTrackerInfo" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSProgressTrackerInfo"
            }
          }
        }
      },
      "RSProgressTrackerInfo" : {
        "type" : "object",
        "properties" : {
          "info" : {
            "type" : "string"
          }
        }
      },
      "RSCategoryProductsList" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "products" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSSearchCategoryProductsListResult"
            }
          }
        }
      },
      "RSSearchCategoryProductsListResult" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "productOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "categoryOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "productNo" : {
            "type" : "string",
            "example" : "36285"
          },
          "description" : {
            "type" : "string",
            "example" : "Trooper"
          },
          "state1" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "state2" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "state3" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "state4" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "objectType" : {
            "type" : "string"
          },
          "productURI" : {
            "type" : "string",
            "format" : "uri"
          },
          "mainAsset" : {
            "$ref" : "#/components/schemas/RSAsset"
          },
          "dimensionNo" : {
            "type" : "string"
          },
          "itemURIs" : {
            "type" : "array",
            "example" : "['/iPIM/rest/api/items/7000029577', '/iPIM/rest/api/items/7000027775']",
            "items" : {
              "type" : "string",
              "format" : "uri",
              "example" : "['/iPIM/rest/api/items/7000029577', '/iPIM/rest/api/items/7000027775']"
            }
          },
          "salesCategories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSCategory"
            }
          },
          "itemURI" : {
            "type" : "string",
            "format" : "uri",
            "writeOnly" : true
          }
        }
      },
      "RSProduct" : {
        "type" : "object",
        "properties" : {
          "productNo" : {
            "type" : "string",
            "example" : "36285"
          },
          "description" : {
            "type" : "string",
            "example" : "Trooper"
          },
          "category" : {
            "$ref" : "#/components/schemas/RSCategory"
          },
          "salesCategories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSCategory"
            }
          },
          "state1" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "state2" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "state3" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "state4" : {
            "$ref" : "#/components/schemas/RSState"
          },
          "objectType" : {
            "type" : "string"
          },
          "productURI" : {
            "type" : "string",
            "format" : "uri"
          },
          "itemURIs" : {
            "type" : "array",
            "example" : "['/iPIM/rest/api/items/7000029577', '/iPIM/rest/api/items/7000027775']",
            "items" : {
              "type" : "string",
              "format" : "uri",
              "example" : "['/iPIM/rest/api/items/7000029577', '/iPIM/rest/api/items/7000027775']"
            }
          },
          "dimensionURIs" : {
            "type" : "array",
            "example" : "['/iPIM/rest/api/dimensions/100990_ROT','/iPIM/rest/api/dimensions/100990_GRUEN']",
            "items" : {
              "type" : "string",
              "format" : "uri",
              "example" : "['/iPIM/rest/api/dimensions/100990_ROT','/iPIM/rest/api/dimensions/100990_GRUEN']"
            }
          },
          "mainAsset" : {
            "$ref" : "#/components/schemas/RSAsset"
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttribute"
            }
          },
          "dimensionNo" : {
            "type" : "string"
          },
          "itemURI" : {
            "type" : "string",
            "format" : "uri",
            "writeOnly" : true
          }
        }
      },
      "RSRatingAttribute" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "example" : "material"
          },
          "attributeDataType" : {
            "type" : "string"
          },
          "supplier" : {
            "type" : "string"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSValue"
            }
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSAttribute"
            }
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSText"
            }
          },
          "forceUpdate" : {
            "type" : "boolean"
          },
          "attributeType" : {
            "type" : "string",
            "writeOnly" : true,
            "enum" : [ "attribute", "supplierAttribute", "fake", "price", "xsell", "asset", "text", "nodeArticleRelation" ]
          }
        }
      },
      "RSRatingOut" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "text" : {
            "type" : "string"
          },
          "approved" : {
            "type" : "boolean"
          },
          "ratingDate" : {
            "type" : "string"
          },
          "countIsHelpful" : {
            "type" : "integer",
            "format" : "int64"
          },
          "countIsNotHelpful" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ratingSystem" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSRatingAttribute"
            }
          },
          "value" : {
            "type" : "string"
          },
          "wasHelpful" : {
            "type" : "boolean"
          },
          "ratingSystemRatingId" : {
            "type" : "string"
          }
        }
      },
      "RSReport" : {
        "type" : "object",
        "properties" : {
          "descriptions" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/RSText"
              }
            }
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "RSUserRole" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "userRights" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSUserRight"
            }
          }
        }
      },
      "RSValidationResult" : {
        "type" : "object",
        "properties" : {
          "valid" : {
            "type" : "boolean"
          },
          "message" : {
            "type" : "string"
          },
          "validationItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RSValidationResultItem"
            }
          }
        }
      },
      "RSValidationResultItem" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "valid" : {
            "type" : "boolean"
          }
        }
      },
      "RSWorklist" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          },
          "listFolder" : {
            "type" : "string"
          }
        }
      }
    }
  }
}