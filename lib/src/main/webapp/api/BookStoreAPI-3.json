{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Bookstore APIs",
    "description" : "Novomind APIs exposed from a Java EE back-end to an Angular front-end",
    "contact" : {
      "name" : "Arkadi Daschkewitsch",
      "url" : "https://my.instagram",
      "email" : "arkadi.daschkewitsch@gmail.com"
    },
    "license" : {
      "name" : "arkadi",
      "url" : "arkadi.com"
    },
    "version" : "V1.0.0"
  },
  "externalDocs" : {
    "description" : "xwiki link",
    "url" : "https//:novomind.pim.wiki.de"
  },
  "servers" : [ {
    "url" : "https://localhost:8080",
    "description" : "book api",
    "variables" : { }
  }, {
    "url" : "https://localhost.test:8080",
    "description" : "book api for testing",
    "variables" : { }
  } ],
  "tags" : [ {
    "name" : "Book",
    "description" : "Tag grouping stuff together"
  } ],
  "paths" : {
    "/books/{id}" : {
      "get" : {
        "summary" : "returns a book",
        "description" : "Returns a book given an id",
        "operationId" : "getBook",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Book found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Book"
                }
              }
            }
          },
          "404" : {
            "description" : "Book not found"
          },
          "400" : {
            "description" : "Invalid input. Id cannot be lower than 1"
          }
        }
      },
      "delete" : {
        "summary" : "Deletes a book given an id",
        "description" : "deletes a book given an id, this operation cant ak more time then expected",
        "operationId" : "deleteBook",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Book has been deleted"
          },
          "400" : {
            "description" : "Invalid input. Id cannot be lower than 1"
          },
          "500" : {
            "description" : "Book not found"
          }
        }
      }
    },
    "/books" : {
      "get" : {
        "summary" : "Returns all the books",
        "description" : "return all books in a json format without author personal data",
        "operationId" : "getBooks",
        "responses" : {
          "200" : {
            "description" : "Books found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "No books found"
          }
        }
      },
      "post" : {
        "tags" : [ "Book" ],
        "summary" : "create a book",
        "description" : "Creates a book given a JSon Book representation",
        "operationId" : "createBook",
        "parameters" : [ {
          "name" : "book",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Book"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Book"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The book is created"
          },
          "415" : {
            "description" : "Format is not JSon"
          }
        }
      }
    },
    "/books/count" : {
      "get" : {
        "summary" : "Returns the number of books",
        "operationId" : "countBooks",
        "responses" : {
          "200" : {
            "description" : "Number of books found"
          },
          "204" : {
            "description" : "No books found"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Book" : {
        "required" : [ "isbn", "title" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Identifier",
            "format" : "int64"
          },
          "title" : {
            "maxLength" : 200,
            "minLength" : 1,
            "type" : "string",
            "description" : "Title of the book"
          },
          "description" : {
            "maxLength" : 10000,
            "minLength" : 1,
            "type" : "string",
            "description" : "Summary describing the book"
          },
          "unitCost" : {
            "minimum" : 1,
            "type" : "number",
            "description" : "Unit cost",
            "format" : "float"
          },
          "isbn" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string",
            "description" : "ISBN number"
          },
          "publicationDate" : {
            "type" : "string",
            "description" : "Date in which the book has been published",
            "format" : "date-time"
          },
          "nbOfPages" : {
            "maximum" : 5000,
            "pattern" : "\\d+",
            "type" : "integer",
            "description" : "Number of pages",
            "format" : "int32"
          },
          "imageURL" : {
            "type" : "string",
            "description" : "URL of the image cover"
          },
          "language" : {
            "type" : "string",
            "description" : "Language in which the book has been written",
            "enum" : [ "ENGLISH", "FRENCH", "SPANISH", "PORTUGUESE", "ITALIAN", "FINISH", "GERMAN", "DEUTSCH", "RUSSIAN" ]
          }
        },
        "description" : "Book resource representation"
      }
    }
  }
}